{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christian Z\\\\Documents\\\\Gemeinde\\\\church-website\\\\src\\\\DataHandler.js\",\n    _s = $RefreshSig$();\n\nimport $ from 'jquery';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function getJSON(path) {\n  return $.getJSON(path, function (result) {\n    return result;\n  });\n}\n\nfunction LoadJSON(path) {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    getJSON(path).then(function (content) {\n      setData(content);\n    });\n  }, []);\n  return data;\n}\n\n_s(LoadJSON, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = LoadJSON;\n\nfunction lineToHtml(line) {\n  let content = [\"\"];\n  let chars = [...line];\n\n  for (let i = 0; i < chars.length; i++) {\n    if (chars[i] === '\\n') {\n      content.push( /*#__PURE__*/_jsxDEV(\"br\", {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }, this));\n      content.push(\"\");\n    } else content[content.length - 1] += chars[i];\n  }\n\n  return content;\n}\n\nfunction lineToLink(line) {\n  line = line.slice(6);\n  let [url, text] = line.split(\"<txt>\");\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: url,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    children: text\n  }, url, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n}\n\nexport function strArrayToText(strArray) {\n  return strArray.map(line => {\n    if (line.slice(0, 6) === \"<link>\") return lineToLink(line);\n    return lineToHtml(line);\n  });\n}\nexport function strRemoveUmlauts(str) {\n  str = str.replace(/\\u00c4/g, \"Ae\");\n  str = str.replace(/\\u00e4/g, \"ae\");\n  str = str.replace(/\\u00d6/g, \"Oe\");\n  str = str.replace(/\\u00f6/g, \"oe\");\n  str = str.replace(/\\u00dc/g, \"Ue\");\n  str = str.replace(/\\u00fc/g, \"ue\");\n  str = str.replace(/\\u00df/g, \"ss\");\n  return str;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadJSON\");","map":{"version":3,"names":["$","useState","useEffect","getJSON","path","result","LoadJSON","data","setData","then","content","lineToHtml","line","chars","i","length","push","lineToLink","slice","url","text","split","strArrayToText","strArray","map","strRemoveUmlauts","str","replace"],"sources":["C:/Users/Christian Z/Documents/Gemeinde/church-website/src/DataHandler.js"],"sourcesContent":["import $ from 'jquery';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport function getJSON(path){\r\n    return $.getJSON(path, function(result) {\r\n        return result;\r\n    });\r\n}\r\n\r\nfunction LoadJSON(path){\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n      getJSON(path).then(function(content) { setData(content); });\r\n  }, []);\r\n\r\n  return data;\r\n}\r\n\r\nfunction lineToHtml(line){\r\n    let content = [\"\"];\r\n    let chars = [...line];\r\n    \r\n    for(let i = 0; i < chars.length; i++){\r\n        if(chars[i] === '\\n') {\r\n            content.push(<br key={i}/>);\r\n            content.push(\"\");\r\n        }\r\n        else content[content.length - 1] += chars[i];\r\n    }\r\n\r\n    return content;\r\n}\r\nfunction lineToLink(line){\r\n    line = line.slice(6);\r\n    let [url, text] = line.split(\"<txt>\");\r\n    return <a href={url} target=\"_blank\" rel=\"noreferrer\" key={url}>{text}</a>\r\n}\r\n\r\nexport function strArrayToText(strArray){\r\n    return strArray.map((line) => {\r\n        if(line.slice(0, 6) === \"<link>\") return lineToLink(line);\r\n        return lineToHtml(line);\r\n    })\r\n}\r\n\r\nexport function strRemoveUmlauts(str){\r\n    str = str.replace(/\\u00c4/g, \"Ae\");\r\n    str = str.replace(/\\u00e4/g, \"ae\");\r\n    str = str.replace(/\\u00d6/g, \"Oe\");\r\n    str = str.replace(/\\u00f6/g, \"oe\");\r\n    str = str.replace(/\\u00dc/g, \"Ue\");\r\n    str = str.replace(/\\u00fc/g, \"ue\");\r\n    str = str.replace(/\\u00df/g, \"ss\");\r\n    return str;\r\n}"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAsB;EACzB,OAAOJ,CAAC,CAACG,OAAF,CAAUC,IAAV,EAAgB,UAASC,MAAT,EAAiB;IACpC,OAAOA,MAAP;EACH,CAFM,CAAP;AAGH;;AAED,SAASC,QAAT,CAAkBF,IAAlB,EAAuB;EAAA;;EACrB,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;EAEAC,SAAS,CAAC,MAAM;IACZC,OAAO,CAACC,IAAD,CAAP,CAAcK,IAAd,CAAmB,UAASC,OAAT,EAAkB;MAAEF,OAAO,CAACE,OAAD,CAAP;IAAmB,CAA1D;EACH,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAOH,IAAP;AACD;;GARQD,Q;;KAAAA,Q;;AAUT,SAASK,UAAT,CAAoBC,IAApB,EAAyB;EACrB,IAAIF,OAAO,GAAG,CAAC,EAAD,CAAd;EACA,IAAIG,KAAK,GAAG,CAAC,GAAGD,IAAJ,CAAZ;;EAEA,KAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAK,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;IACjC,IAAGD,KAAK,CAACC,CAAD,CAAL,KAAa,IAAhB,EAAsB;MAClBJ,OAAO,CAACM,IAAR,eAAa,kBAASF,CAAT;QAAA;QAAA;QAAA;MAAA,QAAb;MACAJ,OAAO,CAACM,IAAR,CAAa,EAAb;IACH,CAHD,MAIKN,OAAO,CAACA,OAAO,CAACK,MAAR,GAAiB,CAAlB,CAAP,IAA+BF,KAAK,CAACC,CAAD,CAApC;EACR;;EAED,OAAOJ,OAAP;AACH;;AACD,SAASO,UAAT,CAAoBL,IAApB,EAAyB;EACrBA,IAAI,GAAGA,IAAI,CAACM,KAAL,CAAW,CAAX,CAAP;EACA,IAAI,CAACC,GAAD,EAAMC,IAAN,IAAcR,IAAI,CAACS,KAAL,CAAW,OAAX,CAAlB;EACA,oBAAO;IAAG,IAAI,EAAEF,GAAT;IAAc,MAAM,EAAC,QAArB;IAA8B,GAAG,EAAC,YAAlC;IAAA,UAA0DC;EAA1D,GAAoDD,GAApD;IAAA;IAAA;IAAA;EAAA,QAAP;AACH;;AAED,OAAO,SAASG,cAAT,CAAwBC,QAAxB,EAAiC;EACpC,OAAOA,QAAQ,CAACC,GAAT,CAAcZ,IAAD,IAAU;IAC1B,IAAGA,IAAI,CAACM,KAAL,CAAW,CAAX,EAAc,CAAd,MAAqB,QAAxB,EAAkC,OAAOD,UAAU,CAACL,IAAD,CAAjB;IAClC,OAAOD,UAAU,CAACC,IAAD,CAAjB;EACH,CAHM,CAAP;AAIH;AAED,OAAO,SAASa,gBAAT,CAA0BC,GAA1B,EAA8B;EACjCA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,CAAN;EACAD,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,CAAN;EACAD,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,CAAN;EACAD,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,CAAN;EACAD,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,CAAN;EACAD,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,CAAN;EACAD,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,CAAN;EACA,OAAOD,GAAP;AACH"},"metadata":{},"sourceType":"module"}